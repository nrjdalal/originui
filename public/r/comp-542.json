{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "comp-542",
  "type": "registry:component",
  "dependencies": [
    "date-fns"
  ],
  "files": [
    {
      "type": "registry:component",
      "target": "components/comp-542.tsx",
      "content": "\"use client\"\n\nimport { useState } from \"react\"\nimport { addDays, setHours, setMinutes, subDays } from \"date-fns\"\n\nimport {\n  EventCalendar,\n  type CalendarEvent,\n} from \"@/components/event-calendar\"\n\n// Sample events data with hardcoded times\nconst sampleEvents: CalendarEvent[] = [\n  {\n    id: \"1\",\n    title: \"Annual Planning\",\n    description: \"Strategic planning for next year\",\n    start: subDays(new Date(), 24), // 24 days before today\n    end: subDays(new Date(), 23), // 23 days before today\n    allDay: true,\n    color: \"sky\",\n    location: \"Main Conference Hall\",\n  },\n  {\n    id: \"2\",\n    title: \"Project Deadline\",\n    description: \"Submit final deliverables\",\n    start: setMinutes(setHours(subDays(new Date(), 9), 13), 0), // 1:00 PM, 9 days before\n    end: setMinutes(setHours(subDays(new Date(), 9), 15), 30), // 3:30 PM, 9 days before\n    color: \"amber\",\n    location: \"Office\",\n  },\n  {\n    id: \"3\",\n    title: \"Quarterly Budget Review\",\n    description: \"Strategic planning for next year\",\n    start: subDays(new Date(), 13), // 13 days before today\n    end: subDays(new Date(), 13), // 13 days before today\n    allDay: true,\n    color: \"orange\",\n    location: \"Main Conference Hall\",\n  },\n  {\n    id: \"4\",\n    title: \"Team Meeting\",\n    description: \"Weekly team sync\",\n    start: setMinutes(setHours(new Date(), 10), 0), // 10:00 AM today\n    end: setMinutes(setHours(new Date(), 11), 0), // 11:00 AM today\n    color: \"sky\",\n    location: \"Conference Room A\",\n  },\n  {\n    id: \"5\",\n    title: \"Lunch with Client\",\n    description: \"Discuss new project requirements\",\n    start: setMinutes(setHours(addDays(new Date(), 1), 12), 0), // 12:00 PM, 1 day from now\n    end: setMinutes(setHours(addDays(new Date(), 1), 13), 15), // 1:15 PM, 1 day from now\n    color: \"emerald\",\n    location: \"Downtown Cafe\",\n  },\n  {\n    id: \"6\",\n    title: \"Product Launch\",\n    description: \"New product release\",\n    start: addDays(new Date(), 3), // 3 days from now\n    end: addDays(new Date(), 6), // 6 days from now\n    allDay: true,\n    color: \"violet\",\n  },\n  {\n    id: \"7\",\n    title: \"Sales Conference\",\n    description: \"Discuss about new clients\",\n    start: setMinutes(setHours(addDays(new Date(), 4), 14), 30), // 2:30 PM, 4 days from now\n    end: setMinutes(setHours(addDays(new Date(), 5), 14), 45), // 2:45 PM, 5 days from now\n    color: \"rose\",\n    location: \"Downtown Cafe\",\n  },\n  {\n    id: \"8\",\n    title: \"Team Meeting\",\n    description: \"Weekly team sync\",\n    start: setMinutes(setHours(addDays(new Date(), 5), 9), 0), // 9:00 AM, 5 days from now\n    end: setMinutes(setHours(addDays(new Date(), 5), 10), 30), // 10:30 AM, 5 days from now\n    color: \"orange\",\n    location: \"Conference Room A\",\n  },\n  {\n    id: \"9\",\n    title: \"Review contracts\",\n    description: \"Weekly team sync\",\n    start: setMinutes(setHours(addDays(new Date(), 5), 14), 0), // 2:00 PM, 5 days from now\n    end: setMinutes(setHours(addDays(new Date(), 5), 15), 30), // 3:30 PM, 5 days from now\n    color: \"sky\",\n    location: \"Conference Room A\",\n  },\n  {\n    id: \"10\",\n    title: \"Team Meeting\",\n    description: \"Weekly team sync\",\n    start: setMinutes(setHours(addDays(new Date(), 5), 9), 45), // 9:45 AM, 5 days from now\n    end: setMinutes(setHours(addDays(new Date(), 5), 11), 0), // 11:00 AM, 5 days from now\n    color: \"amber\",\n    location: \"Conference Room A\",\n  },\n  {\n    id: \"11\",\n    title: \"Marketing Strategy Session\",\n    description: \"Quarterly marketing planning\",\n    start: setMinutes(setHours(addDays(new Date(), 9), 10), 0), // 10:00 AM, 9 days from now\n    end: setMinutes(setHours(addDays(new Date(), 9), 15), 30), // 3:30 PM, 9 days from now\n    color: \"emerald\",\n    location: \"Marketing Department\",\n  },\n  {\n    id: \"12\",\n    title: \"Annual Shareholders Meeting\",\n    description: \"Presentation of yearly results\",\n    start: addDays(new Date(), 17), // 17 days from now\n    end: addDays(new Date(), 17), // 17 days from now\n    allDay: true,\n    color: \"sky\",\n    location: \"Grand Conference Center\",\n  },\n  {\n    id: \"13\",\n    title: \"Product Development Workshop\",\n    description: \"Brainstorming for new features\",\n    start: setMinutes(setHours(addDays(new Date(), 26), 9), 0), // 9:00 AM, 26 days from now\n    end: setMinutes(setHours(addDays(new Date(), 27), 17), 0), // 5:00 PM, 27 days from now\n    color: \"rose\",\n    location: \"Innovation Lab\",\n  },\n]\n\nexport default function Component() {\n  const [events, setEvents] = useState<CalendarEvent[]>(sampleEvents)\n\n  const handleEventAdd = (event: CalendarEvent) => {\n    setEvents([...events, event])\n  }\n\n  const handleEventUpdate = (updatedEvent: CalendarEvent) => {\n    setEvents(\n      events.map((event) =>\n        event.id === updatedEvent.id ? updatedEvent : event\n      )\n    )\n  }\n\n  const handleEventDelete = (eventId: string) => {\n    setEvents(events.filter((event) => event.id !== eventId))\n  }\n\n  return (\n    <EventCalendar\n      events={events}\n      onEventAdd={handleEventAdd}\n      onEventUpdate={handleEventUpdate}\n      onEventDelete={handleEventDelete}\n    />\n  )\n}\n",
      "path": "registry/default/components/comp-542.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/event-calendar/index.ts",
      "content": "\"use client\"\n\n// Component exports\nexport { AgendaView } from \"./agenda-view\"\nexport { DayView } from \"./day-view\"\nexport { DraggableEvent } from \"./draggable-event\"\nexport { DroppableCell } from \"./droppable-cell\"\nexport { EventDialog } from \"./event-dialog\"\nexport { EventItem } from \"./event-item\"\nexport { EventsPopup } from \"./events-popup\"\nexport { EventCalendar } from \"./event-calendar\"\nexport { MonthView } from \"./month-view\"\nexport { WeekView } from \"./week-view\"\nexport { CalendarDndProvider, useCalendarDnd } from \"./calendar-dnd-context\"\n\n// Constants and utility exports\nexport * from \"./constants\"\nexport * from \"./utils\"\n\n// Hook exports\nexport * from \"./hooks/use-current-time-indicator\"\nexport * from \"./hooks/use-event-visibility\"\n\n// Type exports\nexport type { CalendarEvent, CalendarView, EventColor } from \"./types\"\n",
      "path": "registry/default/components/event-calendar/index.ts"
    }
  ],
  "meta": {
    "tags": [
      "calendar"
    ],
    "colSpan": 3
  }
}
